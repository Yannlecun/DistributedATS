/* -*- C++ -*- */
/* Generated by /Users/mkipnis/OpenDDS-3.9/bin/opendds_idl version 3.9 (ACE version 6.2a_p10) running on input file OrderCancelReplaceRequest.idl */
#ifndef OPENDDS_IDL_GENERATED_ORDERCANCELREPLACEREQUESTTYPESUPPORTIMPL_H_ZKIQK7
#define OPENDDS_IDL_GENERATED_ORDERCANCELREPLACEREQUESTTYPESUPPORTIMPL_H_ZKIQK7
#include "OrderCancelReplaceRequestC.h"
#include "dds/DCPS/Definitions.h"
#include "HeaderC.h"
#include "OrderCancelReplaceRequestTypeSupportC.h"
#include "dds/DCPS/DataReaderImpl_T.h"
#include "dds/DCPS/DataWriterImpl_T.h"
#include "dds/DCPS/Serializer.h"
#include "dds/DCPS/TypeSupportImpl_T.h"


/* Begin MODULE: CORBA */


/* End MODULE: CORBA */


/* Begin MODULE: DistributedATS */



/* Begin STRUCT: Header */


/* End STRUCT: Header */

/* End MODULE: DistributedATS */


/* Begin MODULE: DistributedATS_OrderCancelReplaceRequest */



/* Begin STRUCT: OrderCancelReplaceRequest */

namespace OpenDDS { namespace DCPS {

DistributedATS_Export
void gen_find_size(const DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest& stru, size_t& size, size_t& padding);

DistributedATS_Export
bool operator<<(Serializer& strm, const DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest& stru);

DistributedATS_Export
bool operator>>(Serializer& strm, DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest& stru);

DistributedATS_Export
bool gen_is_bounded_size(const DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest&);

DistributedATS_Export
size_t gen_max_marshaled_size(const DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest& stru, bool align);

DistributedATS_Export
bool gen_is_bounded_size(KeyOnly<const DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest>);

DistributedATS_Export
size_t gen_max_marshaled_size(KeyOnly<const DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest> stru, bool align);

DistributedATS_Export
void gen_find_size(KeyOnly<const DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest> stru, size_t& size, size_t& padding);

DistributedATS_Export
bool operator<<(Serializer& strm, KeyOnly<const DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest> stru);

DistributedATS_Export
bool operator>>(Serializer& strm, KeyOnly<DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest> stru);

}  }

namespace OpenDDS { namespace DCPS {

DistributedATS_Export
bool gen_has_key(const DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest&);

}  }

namespace DistributedATS_OrderCancelReplaceRequest {
namespace OpenDDSGenerated {
// This structure supports use of std::map with a key
// defined by one or more #pragma DCPS_DATA_KEY lines.
struct DistributedATS_Export OrderCancelReplaceRequest_KeyLessThan {
  bool operator()(const DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest& v1, const DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest& v2) const
  {
    using ::operator<; // TAO::String_Manager's operator< is in global NS
    ACE_UNUSED_ARG(v1);
    ACE_UNUSED_ARG(v2);
    // with no DCPS_DATA_KEYs, return false
    // to allow use of map with just one entry
    return false;
  }
};
}
}
namespace OpenDDS { namespace DCPS {
template <>
struct DDSTraits<DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest> {
  typedef DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest MessageType;
  typedef DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequestSeq MessageSequenceType;
  typedef DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequestTypeSupport TypeSupportType;
  typedef DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequestDataWriter DataWriterType;
  typedef DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequestDataReader DataReaderType;
  typedef DistributedATS_OrderCancelReplaceRequest::OpenDDSGenerated::OrderCancelReplaceRequest_KeyLessThan LessThanType;

  inline static const char* type_name () { return "DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest"; }
  inline static bool gen_has_key (const MessageType& x) { return ::OpenDDS::DCPS::gen_has_key(x); }

  inline static bool gen_is_bounded_size (const MessageType& x) { return ::OpenDDS::DCPS::gen_is_bounded_size(x); }
  inline static size_t gen_max_marshaled_size(const MessageType& x, bool align) { return ::OpenDDS::DCPS::gen_max_marshaled_size(x, align); }
  inline static void gen_find_size(const MessageType& arr, size_t& size, size_t& padding) { ::OpenDDS::DCPS::gen_find_size(arr, size, padding); }

  inline static bool gen_is_bounded_size (const OpenDDS::DCPS::KeyOnly<const MessageType>& x) { return ::OpenDDS::DCPS::gen_is_bounded_size(x); }
  inline static size_t gen_max_marshaled_size(const OpenDDS::DCPS::KeyOnly<const MessageType>& x, bool align) { return ::OpenDDS::DCPS::gen_max_marshaled_size(x, align); }
  inline static void gen_find_size(const OpenDDS::DCPS::KeyOnly<const MessageType>& arr, size_t& size, size_t& padding) { ::OpenDDS::DCPS::gen_find_size(arr, size, padding); }
};
}  }

namespace DistributedATS_OrderCancelReplaceRequest {
  typedef OpenDDS::DCPS::DataWriterImpl_T<DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest> OrderCancelReplaceRequestDataWriterImpl;
  typedef OpenDDS::DCPS::DataReaderImpl_T<DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest> OrderCancelReplaceRequestDataReaderImpl;
  typedef OpenDDS::DCPS::TypeSupportImpl_T<DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest> OrderCancelReplaceRequestTypeSupportImpl;
}
#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
namespace OpenDDS { namespace DCPS {

class MetaStruct;

template<typename T>
const MetaStruct& getMetaStruct();

template<>
DistributedATS_Export
const MetaStruct& getMetaStruct<DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest>();
DistributedATS_Export
void gen_skip_over(Serializer& ser, DistributedATS_OrderCancelReplaceRequest::OrderCancelReplaceRequest*);

}  }

#endif

/* End STRUCT: OrderCancelReplaceRequest */

/* End MODULE: DistributedATS_OrderCancelReplaceRequest */
#endif /* OPENDDS_IDL_GENERATED_ORDERCANCELREPLACEREQUESTTYPESUPPORTIMPL_H_ZKIQK7 */
