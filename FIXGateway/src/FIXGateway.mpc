project(FIXGateway) : dcpsexe, dcps_tcp, svc_utils  {

        dynamicflags   = DISTRIBUTEDATS_BUILD_DLL
        requires += tao_orbsvcs
        after    += Svc_Utils Adapters Logon Logout NewOrderSingle ExecutionReport MarketDataIncrementalRefresh OrderCancelRequest OrderCancelReject OrderMassCancelRequest OrderMassCancelReport SecurityListRequest SecurityList MarketDataRequest MarketDataSnapshotFullRefresh OrderMassStatusRequest
        includes      += $(TAO_ROOT)/orbsvcs
        idlflags      += -I$(TAO_ROOT)/orbsvcs \
                -Wb,export_macro=DistributedATS_Export \
                -Wb,export_include=DistributedATS_Export.h
                dcps_ts_flags += -Wb,export_macro=DistributedATS_Export

	exeout		= 	$(DATS_HOME)/bin
        exename         =       * 
        requires       +=       tao_orbsvcs

        includes       +=       $(TAO_ROOT)/orbsvcs $(QUICKFIX_HOME)/include $(DATS_HOME)/GenTools/idl/ $(DATS_HOME)/Common
        libpaths       +=       $(QUICKFIX_HOME)/lib $(DATS_HOME)/lib

        after    += Svc_Utils

        libs           +=       quickfix Adapters Logon Logout NewOrderSingle ExecutionReport MarketDataIncrementalRefresh OrderCancelRequest OrderCancelReject OrderMassCancelRequest OrderMassCancelReport SecurityListRequest SecurityList MarketDataRequest MarketDataSnapshotFullRefresh OrderMassStatusRequest OrderCancelReplaceRequest BusinessMessageReject Heartbeat

        Source_Files {
                main.cpp
              Application.cpp
              SocketAcceptor.cpp
              SocketConnection.cpp
                LogonDataReaderListenerImpl.cpp
                ExecutionReportDataReaderListenerImpl.cpp
                LogoutDataReaderListenerImpl.cpp
                MarketDataIncrementalRefreshDataReaderListenerImpl.cpp
		MarketDataSnapshotFullRefreshDataReaderListenerImpl.cpp
                OrderCancelRejectDataReaderListenerImpl.cpp
                OrderMassCancelReportDataReaderListenerImpl.cpp
		                SecurityListDataReaderListenerImpl.cpp
		AuthServiceHelper.cpp
		FileLog.cpp
        }
}

