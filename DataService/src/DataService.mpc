


project(DataService) : dcpsexe, dcps_tcp, svc_utils  {

        dynamicflags   = DISTRIBUTEDATS_BUILD_DLL
        requires += tao_orbsvcs
        after    += Svc_Utils Logon Logout SecurityList SecurityListRequest ExecutionReport MarketDataSnapshotFullRefresh OrderMassStatusRequest MarketDataIncrementalRefresh ExecutionReport MarketDataRequest
        includes      += $(TAO_ROOT)/orbsvcs
        idlflags      += -I$(TAO_ROOT)/orbsvcs \
                -Wb,export_macro=DistributedATS_Export \
                -Wb,export_include=DistributedATS_Export.h
                dcps_ts_flags += -Wb,export_macro=DistributedATS_Export

	exeout		= 	$(DATS_HOME)/bin

        exename         =       * 
	requires       +=       tao_orbsvcs

        includes       +=       $(TAO_ROOT)/orbsvcs $(DATS_HOME)/GenTools/idl/ $(DATS_HOME)/Common $(MYSQL_INCLUDE) $(QUICKFIX_HOME)/include
        libpaths       +=       $(DATS_HOME)/lib $(QUICKFIX_HOME)/lib $(MYSQL_CLIENT_LIB_HOME)

	after    += Svc_Utils

        libs           +=       Logon Logout mysqlclient SecurityList SecurityListRequest z ExecutionReport MarketDataSnapshotFullRefresh OrderMassStatusRequest MarketDataIncrementalRefresh ExecutionReport MarketDataRequest

        Source_Files {
		MassOrderStatusRequestDataReaderListenerImpl.cpp
		MarketDataService.cpp
		ExecutionReportDataReaderListenerImpl.cpp
		MarketDataIncrementalRefreshDataReaderListenerImpl.cpp
		MarketDataRequestDataReaderListenerImpl.cpp
		SecurityListRequestDataReaderListenerImpl.cpp
		LogonDataReaderListenerImpl.cpp
		AuthService.cpp
		RefDataService.cpp
		LogoutDataReaderListenerImpl.cpp
		MassOrderStatusService.cpp
		main.cpp
        }
}

